# Config file for PostgreSQL
- name: Config | Stop the Cluster
  command: service postgresql stop
  when: postgresql_cluster_reset

- name: Config | Ensure the parent data directory exists
  file: state=directory name="{{postgresql_data_directory}}/" owner="{{postgresql_admin_user}}" group="{{postgresql_admin_user}}" recurse=true

- name: Config | Reset the cluster - drop the existing one
  file: state=absent name={{ postgresql_conf_directory }}
  when: postgresql_cluster_reset

- name: Install service file on Centos/Rhel 7
  template: src="postgresql.service.j2" dest="/etc/systemd/system/postgresql.service"
  when: ansible_distribution_major_version == '7'

- name: Check whether the data directory is already there
  stat: path={{ postgresql_data_directory }}/base
  register: data_dir

- name: Initialise Postgresql Database if it is not
  command: service postgresql initdb {{postgresql_cluster_name}}
  notify: restart postgresql
  when: data_dir.stat.exists == false and ansible_distribution_major_version == '6'

- name: Initialise Postgresql Database on Centos/Rhel 7 if it is not
  command: postgresql-setup initdb
  notify: restart postgresql
  when: data_dir.stat.exists == false and ansible_distribution_major_version == '7'

- name: Configure | Update configuration - (pg_hba.conf)
  template:
    src: pg_hba.conf.j2
    dest: "{{postgresql_conf_directory}}/pg_hba.conf"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    mode: 0640
  notify:
    - restart postgresql
  tags:
    - core_config_updates

- name: Configure | Update configuration - (postgresql.conf)
  template:
    src: postgresql.conf.j2
    dest: "{{postgresql_conf_directory}}/postgresql.conf"
    owner: "{{postgresql_admin_user}}"
    group: "{{postgresql_admin_user}}"
    mode: 0640
  notify:
    - restart postgresql
  tags:
    - core_config_updates

- include: ssl.yml
  when: "postgresql_ssl != 'off'"

- name: Configure | DB restart should happen now if required
  meta: flush_handlers

# Ensure postgresql is started if it didn't get restarted
# (i.e. it was down and no config changes since)
- name: Ensure PostgreSQL is running
  service: name=postgresql state=started enabled=yes
